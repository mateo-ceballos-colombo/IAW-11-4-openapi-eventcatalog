openapi: 3.0.3
info:
  title: Order Service API
  version: 1.0.0
  description: API REST para gestión de órdenes y emisión de eventos OrderCreated.
servers:
  - url: http://localhost:3000
paths:
  /health:
    get:
      summary: Verifica el estado del servicio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
  /orders:
    get:
      summary: Lista todas las órdenes
      responses:
        '200':
          description: Lista de órdenes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Crea una nueva orden y publica el evento OrderCreated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderInput'
      responses:
        '201':
          description: Orden creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
  /orders/{id}:
    get:
      summary: Obtiene una orden por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Orden encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: No encontrada
    put:
      summary: Actualiza los items de una orden
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderItem'
              required: [items]
      responses:
        '200':
          description: Orden actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: No encontrada
    delete:
      summary: Cancela una orden existente (status = CANCELLED)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Orden cancelada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: No encontrada
  /orders/search:
    get:
      summary: Busca órdenes por nombre de cliente
      parameters:
        - name: customer
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resultados de la búsqueda
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Parámetro faltante
components:
  schemas:
    OrderItem:
      type: object
      properties:
        sku:
          type: string
        quantity:
          type: integer
        price:
          type: number
      required: [sku, quantity, price]
    CreateOrderInput:
      type: object
      properties:
        customerName:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      required: [customerName, items]
    Order:
      allOf:
        - $ref: '#/components/schemas/CreateOrderInput'
        - type: object
          properties:
            id:
              type: string
            total:
              type: number
            createdAt:
              type: string
              format: date-time
            status:
              type: string
              enum: [CREATED, CANCELLED]
          required: [id, total, createdAt]
